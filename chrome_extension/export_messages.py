"""Script to export messages from the database to an HTML file."""

import base64
import datetime
import html
import json
import os
import sqlite3

from loguru import logger

conn = sqlite3.connect("messages.db")
c = conn.cursor()

c.execute("SELECT * FROM messages")

messages = c.fetchall()

conn.close()

logo_path = "icons/logo.png"
with open(logo_path, "rb") as f:
    logo_data = f.read()
logo_base64 = base64.b64encode(logo_data).decode("utf-8")

page = f"""
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
<html><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/><title>Exported database: messages</title><style type="text/css">table{{border-style:solid;border-width:1px;border-color:black;border-collapse:collapse;}}table tr{{background-color:white;}}table tr.header{{background-color:#DDDDDD;}}table tr.title{{background-color:#EEEEEE;}}table tr td{{padding:0px 3px 0px 3px;border-style:solid;border-width:1px;border-color:#666666;}}table tr td.null{{color:#999999;text-align:center;padding:0px 3px 0px 3px;border-style:solid;border-width:1px;border-color:#666666;}}table tr td.separator{{padding:0px 3px 0px 3px;border-style:solid;border-width:1px;border-color:#666666;background-color:#DDDDDD;}}table tr td.rownum{{padding:0px 3px 0px 3px;border-style:solid;border-width:1px;border-color:#666666;background-color:#DDDDDD;text-align:right;}}table tr td.message{{white-space: pre-wrap;}}.logo{{position: fixed; bottom: 0; right: 0;}}</style><body><table><tr class="title"><td colspan="3" align="center">Table: messages</td></tr><tr class="header"><td align="right"><b><i>#</i></b></td><td><b>id</b><br/>INTEGER</td><td><b>message</b><br/>TEXT</td></tr>
"""  # noqa

for i, message in enumerate(messages):
    message_json = json.loads(message[1])
    if message_json["action"] == "captureDocumentState":
        message_json["documentBody"] = "..."
        message_json["documentHead"] = "..."
        message_json["elements"] = "..."

    message_html = json.dumps(message_json, indent=4, ensure_ascii=False)
    message_html = html.escape(message_html)
    message_html = message_html.replace("\n", "<br/>")
    message_html = message_html.replace(" ", "&nbsp;")
    page += (
        f"<tr><td class='rownum'><i>{i+1}</i></td><td"
        f" align='right'>{message[0]}</td><td class='message'>{message_html}</td></tr>"
    )

page += (
    "</table>"
    '<img class="logo" src="data:image/png;base64,'
    f'{logo_base64}" alt="Logo" width="100" height="100">'
    "<br/><br/><i>Document generated by OpenAdapt on"
    f" {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</i></body></html>"
)

if len(messages) > 0:
    name = f"messages-{json.loads(messages[-1][1])['timestamp']}.html"
else:
    name = f"messages-{datetime.datetime.now().strftime('%Y-%m-%d-%H-%M-%S')}.html"

with open(name, "w") as f:
    f.write(page)

os.system(f"open {name}")
logger.info(f"Saved messages to {name}")
