We are currently in the process of creating a graph describing a process, in which nodes are actions, and edges are states. Nodes represent distinct user actions such as keyboard inputs or mouse clicks, each with specific parameters. Edges define the transitions between these actions, including conditions or sequences. The graph is directed, emphasizing the flow of the process.
Consider the following action:
###
{{ action }}
###
At the time this action was taken, the active window state was:
###
{{ window_state }}
###
Considering the associated screenshot, describe this action in a format that is
amenable to constructing a process graph, parameterizing the specifics where necessary.
Based on the associated screenshot, describe this action for inclusion in the process graph. Emphasize action type, parameters, application context, and pre/post conditions. Ensure consistency in terminology for similar actions and provide enough detail for parameterization. Be mindful of the screenshot's contextual relevance.
Respond in JSON only. The JSON should match the following schema:
###
{
  "type": "object",
  "required": ["actionType", "action", "targetElement", "parameters", "preconditionState", "postconditionState", "additionalContext"],
  "properties": {
    "actionType": {
      "type": "string",
      "description": "Type of the action, e.g., Keyboard Shortcut, Mouse Click."
    },
    "action": {
      "type": "string",
      "description": "Specific action performed, e.g., Switch Application."
    },
    "targetElement": {
      "type": "string",
      "description": "Specific and unique identifier of the target GUI element where the action is performed, if applicable (may be None). Include distinctive features like element type (e.g., button, input field), its label or text if visible, its functional purpose (e.g., 'Start Timer Button', 'Date Selection Dropdown'), and its relative position or unique identifier within the application (e.g., 'Top-Right Corner', 'Second Row in Timesheet'). Avoid general descriptions and focus on attributes that differentiate this element from others in the same context. The description MUST be detailed enough such that it is possible to understand the exact element being described."
    },
    "parameters": {
      "type": "object",
      "required": ["command", "context"],
      "properties": {
        "command": {
          "type": "string",
          "description": "Specific command or input used in the action."
        },
        "context": {
          "type": "string",
          "description": "Application or environment context where the action is performed."
        }
      },
      "additionalProperties": false
    },
    "preconditionState": {
      "type": "string",
      "description": "State of the system before the action is performed."
    },
    "postconditionState": {
      "type": "string",
      "description": "State of the system after the action is performed."
    },
    "additionalContext": {
      "type": "string",
      "description": "Any additional information from the screenshot that is relevant to the action."
    }
  },
  "additionalProperties": false
}
###
Do not make any assumptions, only describe exactly what you see. Do not include specific x/y values. Be concise.
Remember, the targetElement description MUST BE DETAILED ENOUGH TO PRECISELY IDENTIFY THE ELEMENT. Lives are at stake. My career depends on this.
