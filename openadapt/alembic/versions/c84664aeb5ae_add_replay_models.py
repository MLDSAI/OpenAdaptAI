"""add_replay_models

Revision ID: c84664aeb5ae
Revises: bb25e889ad71
Create Date: 2024-06-25 15:05:09.110171

"""
from alembic import op
import sqlalchemy as sa

import openadapt

# revision identifiers, used by Alembic.
revision = "c84664aeb5ae"
down_revision = "bb25e889ad71"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "replay",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp",
            openadapt.models.ForceFloat(precision=10, scale=2, asdecimal=False),
            nullable=True,
        ),
        sa.Column("strategy_name", sa.String(), nullable=True),
        sa.Column("strategy_args", sa.JSON(), nullable=True),
        sa.Column("git_hash", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_replay")),
    )
    op.create_table(
        "replay_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("replay_id", sa.Integer(), nullable=True),
        sa.Column("lineno", sa.Integer(), nullable=True),
        sa.Column("filename", sa.String(), nullable=True),
        sa.Column("git_hash", sa.String(), nullable=True),
        sa.Column(
            "timestamp",
            openadapt.models.ForceFloat(precision=10, scale=2, asdecimal=False),
            nullable=True,
        ),
        sa.Column("log_level", sa.String(), nullable=True),
        sa.Column("key", sa.String(), nullable=True),
        sa.Column("data", sa.LargeBinary(), nullable=True),
        sa.ForeignKeyConstraint(
            ["replay_id"], ["replay.id"], name=op.f("fk_replay_log_replay_id_replay")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_replay_log")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("replay_log")
    op.drop_table("replay")
    # ### end Alembic commands ###
