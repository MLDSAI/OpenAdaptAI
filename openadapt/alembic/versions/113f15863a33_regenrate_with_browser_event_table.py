"""regenrate with browser_event table

Revision ID: 113f15863a33
Revises: bb25e889ad71
Create Date: 2024-07-08 19:59:44.713853

"""
from alembic import op
import sqlalchemy as sa

import openadapt


# revision identifiers, used by Alembic.
revision = '113f15863a33'
down_revision = 'bb25e889ad71'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('replay',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', openadapt.models.ForceFloat(precision=10, scale=2, asdecimal=False), nullable=True),
    sa.Column('strategy_name', sa.String(), nullable=True),
    sa.Column('strategy_args', sa.JSON(), nullable=True),
    sa.Column('git_hash', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_replay'))
    )
    with op.batch_alter_table('action_event', schema=None) as batch_op:
        batch_op.drop_constraint('fk_input_event_browser_event_timestamp_browser_event', type_='foreignkey')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('action_event', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_input_event_browser_event_timestamp_browser_event', 'browser_event', ['browser_event_timestamp'], ['timestamp'])

    op.drop_table('replay')
    # ### end Alembic commands ###
