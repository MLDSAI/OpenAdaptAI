"""add_upload_fields

Revision ID: 46d03b666cd4
Revises: 98505a067995
Create Date: 2024-11-10 23:14:21.187860

"""
from alembic import op
import sqlalchemy as sa

import openadapt

# revision identifiers, used by Alembic.
revision = "46d03b666cd4"
down_revision = "98505a067995"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "replay",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp",
            openadapt.models.ForceFloat(precision=10, scale=2, asdecimal=False),
            nullable=True,
        ),
        sa.Column("strategy_name", sa.String(), nullable=True),
        sa.Column("strategy_args", sa.JSON(), nullable=True),
        sa.Column("git_hash", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_replay")),
    )
    with op.batch_alter_table("recording", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "upload_status",
                sa.Enum("NOT_UPLOADED", "UPLOADING", "UPLOADED", name="uploadstatus"),
                nullable=True,
            )
        )
        batch_op.add_column(sa.Column("uploaded_key", sa.String(), nullable=True))
        batch_op.add_column(
            sa.Column("uploaded_to_custom_bucket", sa.Boolean(), nullable=True)
        )

    # update all recordings to not uploaded
    op.execute("UPDATE recording SET upload_status = 'NOT_UPLOADED' WHERE 1=1")
    # update all recordings to not uploaded to custom bucket
    op.execute("UPDATE recording SET uploaded_to_custom_bucket = FALSE WHERE 1=1")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("recording", schema=None) as batch_op:
        batch_op.drop_column("uploaded_to_custom_bucket")
        batch_op.drop_column("uploaded_key")
        batch_op.drop_column("upload_status")

    op.drop_table("replay")
    # ### end Alembic commands ###
